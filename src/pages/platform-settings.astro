---
import { getFromCookies } from '../api/Auth';
import LayoutStacked from '../app/LayoutStacked.astro';
import { PlatformRoles } from '../common/enums';
import PlatformSetting from '../components/PlatformSetting';
import { apiRoutes } from '../config/apiRoutes';
import { envConfig } from '../config/envConfig';
import { pathRoutes } from '../config/pathRoutes';
import API from '../config/ssrApiConfig';
import { checkUserSession } from '../utils/check-session-feature';
import ErrorNotFound from '../modules/ErrorNotFound.astro';

export const prerender = false;

const response = await checkUserSession(Astro.request, Astro.url.pathname);
if (!response.authorized) {
	return Astro.redirect(response.redirect);
}

const token = getFromCookies(Astro.cookies, 'session');
if (!token) {
	return Astro.redirect(pathRoutes.auth.sinIn);
}

const role = getFromCookies(Astro.cookies, "role");

const fetchPlatformAddminSetting = await API({
	url: `${apiRoutes.users.platformSettings}`,
	token,
	method: 'GET',
});
---

<LayoutStacked showOptions={true} notFoundPage={role !== PlatformRoles.platformAdmin}>
	<PlatformSetting data={fetchPlatformAddminSetting} client:visible />
</LayoutStacked>
